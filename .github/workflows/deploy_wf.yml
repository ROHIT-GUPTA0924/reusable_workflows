name: Deploy Web App

on:
  workflow_call:
    inputs:
      webapp_type:
        description: 'Type of web app to deploy (linux or windows)'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Deploy Windows Web App
      if: ${{ inputs.webapp_type == 'windows' }}
      run: |
        az webapp config appsettings set --resource-group example-resources --name example-windows-webapp --settings WEBSITES_ENABLE_APP_SERVICE_STORAGE=FALSE
        az webapp config appsettings set --resource-group example-resources --name example-windows-webapp --settings WEBSITE_RUN_FROM_PACKAGE=1
        az webapp deployment source config-zip --resource-group example-resources --name example-windows-webapp --src-path path/to/your/sqlserver/package.zip

    - name: Deploy Linux Web App
      if: ${{ inputs.webapp_type == 'linux' }}
      run: |
        az webapp config appsettings set --resource-group example-resources --name example-linux-webapp --settings WEBSITES_ENABLE_APP_SERVICE_STORAGE=FALSE
        az webapp config appsettings set --resource-group example-resources --name example-linux-webapp --settings WEBSITE_RUN_FROM_PACKAGE=1
        az webapp deployment source config-zip --resource-group example-resources --name example-linux-webapp --src-path path/to/your/sqlserver/package.zip